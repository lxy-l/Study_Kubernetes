apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: namespace
    app.kubernetes.io/name: purelb
    app.kubernetes.io/part-of: purelb
  name: purelb
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: lbnodeagents.purelb.io
spec:
  group: purelb.io
  names:
    kind: LBNodeAgent
    listKind: LBNodeAgentList
    plural: lbnodeagents
    shortNames:
    - lbna
    - lbnas
    singular: lbnodeagent
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: LBNodeAgent is the top-level custom resource for configuring node agents. It contains the usual CRD metadata, and the agent spec and status.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LBNodeAgentSpec configures the node agents.  It will have one Local configuration to announce service addresses locally. For examples, see the "config/" directory in the PureLB source tree.
            properties:
              local:
                description: LBNodeAgentLocalSpec configures the announcers to announce service addresses by configuring the underlying operating system. LocalInterface is unimplemented but will be optional. If it is not provided then the agents will add the service address to whichever interface carries the default route. ExtLBInterface is also unimplemented.
                properties:
                  extlbint:
                    default: eth2
                    description: ExtLBInterface specifies the name of the interface to use for announcement of non-local routes. This field is optional but the default is "kube-lb0" which works in most cases.
                    type: string
                  localint:
                    default: default
                    description: LocalInterface allows the user to specify the interface to use for announcement of local addresses. This field is optional but the default is "default" which will make PureLB use the interface that has the default route, which works in most cases.
                    type: string
                type: object
            required:
            - local
            type: object
          status:
            description: LBNodeAgentStatus is currently unused.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: servicegroups.purelb.io
spec:
  group: purelb.io
  names:
    kind: ServiceGroup
    listKind: ServiceGroupList
    plural: servicegroups
    shortNames:
    - sg
    - sgs
    singular: servicegroup
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ServiceGroup is the top-level custom resource for configuring service groups. It contains the usual CRD metadata, and the service group spec and status.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceGroupSpec configures the allocator.  It will have one of either a Local configuration (to allocate service addresses from a local pool) or a Netbox configuration (to get addresses from the Netbox IPAM). For examples, see the "config/" directory in the PureLB source tree.
            properties:
              local:
                description: "ServiceGroupLocalSpec configures the allocator to manage pools of IP addresses locally. Pools can be specified as a CIDR or as a from-to range of addresses, e.g. 'fd53:9ef0:8683::-fd53:9ef0:8683::3'. The subnet is specified with CIDR notation, e.g., 'fd53:9ef0:8683::/120'. All of the addresses in the Pool must be contained within the Subnet. Aggregation is currently unused. \n The Subnet, Pool, and Aggregation fields are a legacy from the pre-dualStack days when a service could have only one IP address. If you're running a single-stack environment then they're still valid, but V4Pool and V6Pool are preferred. The V4Pool and V6Pool fields allow you to configure pools of both IPV4 and IPV6 addresses to support dual-stack and you can also use them in a single-stack environment."
                properties:
                  aggregation:
                    type: string
                  pool:
                    type: string
                  subnet:
                    type: string
                  v4pool:
                    description: ServiceGroupAddressPool specifies a pool of addresses that belong to a ServiceGroupLocalSpec.
                    properties:
                      aggregation:
                        description: Aggregation changes the address mask of the allocated address from the subnet mask to the specified mask. It can be "default" or an integer in the range 8-128.
                        type: string
                      pool:
                        description: Pool specifies a pool of addresses that PureLB manages. It can be a CIDR or a from-to range of addresses, e.g., 'fd53:9ef0:8683::-fd53:9ef0:8683::3'.
                        type: string
                      subnet:
                        description: Subnet specifies the subnet that contains all of the addresses in the Pool. It's specified with CIDR notation, e.g., 'fd53:9ef0:8683::/120'. All of the addresses in the Pool must be contained within the Subnet.
                        type: string
                    required:
                    - aggregation
                    - pool
                    - subnet
                    type: object
                  v6pool:
                    description: ServiceGroupAddressPool specifies a pool of addresses that belong to a ServiceGroupLocalSpec.
                    properties:
                      aggregation:
                        description: Aggregation changes the address mask of the allocated address from the subnet mask to the specified mask. It can be "default" or an integer in the range 8-128.
                        type: string
                      pool:
                        description: Pool specifies a pool of addresses that PureLB manages. It can be a CIDR or a from-to range of addresses, e.g., 'fd53:9ef0:8683::-fd53:9ef0:8683::3'.
                        type: string
                      subnet:
                        description: Subnet specifies the subnet that contains all of the addresses in the Pool. It's specified with CIDR notation, e.g., 'fd53:9ef0:8683::/120'. All of the addresses in the Pool must be contained within the Subnet.
                        type: string
                    required:
                    - aggregation
                    - pool
                    - subnet
                    type: object
                type: object
              netbox:
                description: ServiceGroupNetboxSpec configures the allocator to request addresses from a Netbox IPAM system.
                properties:
                  aggregation:
                    type: string
                  tenant:
                    type: string
                  url:
                    type: string
                required:
                - aggregation
                - tenant
                - url
                type: object
            type: object
          status:
            description: ServiceGroupStatus is currently unused.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: purelb
  name: allocator
  namespace: purelb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: purelb
  name: lbnodeagent
  namespace: purelb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: purelb
  name: pod-lister
  namespace: purelb
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: purelb
  name: purelb:allocator
rules:
- apiGroups:
  - purelb.io
  resources:
  - servicegroups
  - lbnodeagents
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - policy
  resourceNames:
  - allocator
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: purelb
  name: purelb:lbnodeagent
rules:
- apiGroups:
  - purelb.io
  resources:
  - servicegroups
  - lbnodeagents
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - policy
  resourceNames:
  - lbnodeagent
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: purelb
  name: pod-lister
  namespace: purelb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-lister
subjects:
- kind: ServiceAccount
  name: lbnodeagent
  namespace: purelb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: purelb
  name: purelb:allocator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: purelb:allocator
subjects:
- kind: ServiceAccount
  name: allocator
  namespace: purelb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: purelb
  name: purelb:lbnodeagent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: purelb:lbnodeagent
subjects:
- kind: ServiceAccount
  name: lbnodeagent
  namespace: purelb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: purelb
    component: allocator
  name: allocator
  namespace: purelb
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: purelb
      component: allocator
  template:
    metadata:
      annotations:
        prometheus.io/port: "7472"
        prometheus.io/scrape: "true"
      labels:
        app: purelb
        component: allocator
    spec:
      containers:
      - env:
        - name: NETBOX_USER_TOKEN
          valueFrom:
            secretKeyRef:
              key: user-token
              name: netbox-client
              optional: true
        - name: DEFAULT_ANNOUNCER
          value: PureLB
        image: registry.gitlab.com/purelb/purelb/allocator:v0.6.4-pre1
        imagePullPolicy: Always
        name: allocator
        ports:
        - containerPort: 7472
          name: monitoring
        resources:
          limits:
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: allocator
      terminationGracePeriodSeconds: 0
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: purelb
    component: lbnodeagent
  name: lbnodeagent
  namespace: purelb
spec:
  selector:
    matchLabels:
      app: purelb
      component: lbnodeagent
  template:
    metadata:
      annotations:
        prometheus.io/port: "7472"
        prometheus.io/scrape: "true"
      labels:
        app: purelb
        component: lbnodeagent
    spec:
      containers:
      - env:
        - name: NETBOX_USER_TOKEN
          valueFrom:
            secretKeyRef:
              key: user-token
              name: netbox-client
              optional: true
        - name: PURELB_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: PURELB_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: PURELB_ML_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ML_GROUP
          value: 8sb7ikA5qHwQQqxc
        image: registry.gitlab.com/purelb/purelb/lbnodeagent:v0.6.4-pre1
        imagePullPolicy: Always
        name: lbnodeagent
        ports:
        - containerPort: 7472
          name: monitoring
        resources:
          limits:
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          readOnlyRootFilesystem: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: lbnodeagent
      terminationGracePeriodSeconds: 2
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
---
apiVersion: purelb.io/v1
kind: LBNodeAgent
metadata:
  name: default
  namespace: purelb
spec:
  local:
    localint: default
